## 应用服务 WEB 访问端口
#serverport=8080
### Redis控制台: https://kvstorenext.console.aliyun.com
## Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器地址
#spring.redis.host=127.0.0.1
## Redis服务器连接端口
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=1200
#默认配置
server:
  application:
    name: dynamic-datasource

#切换配置
spring:
  profiles:
    active: dev
  #出现错误时, 直接抛出异常(便于异常统一处理，否则捕获不到404)
  mvc:
    throw-exception-if-no-handler-found: true
---
#开发环境
server:
  port: 8080

spring:
  config:
    activate:
      on-profile: dev
  redis:
    port: 6379
    host: 127.0.0.1
    database: 0
    timeout: 1200
    connect-timeout: 5000
    ## 连接池最大连接数（使用负值表示没有限制）
    #spring.redis.pool.max-active=8
    ## 连接池最大阻塞等待时间（使用负值表示没有限制）
    #spring.redis.pool.max-wait=-1
    ## 连接池中的最大空闲连接
    #spring.redis.pool.max-idle=8
    ## 连接池中的最小空闲连接
    #spring.redis.pool.min-idle=0
    jedis:
      pool:
        enabled: true
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
---
#测试环境
server:
  port: 8082

spring:
  config:
    activate:
      on-profile: test
---
#生产环境
server:
  port: 8083

spring:
  config:
    activate:
      on-profile: prod